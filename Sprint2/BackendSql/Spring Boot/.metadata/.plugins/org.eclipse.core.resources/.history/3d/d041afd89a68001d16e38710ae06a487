import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

@CrossOrigin(origins = "*")
@RestController
@RequestMapping("api/ModulePayments/billsBinnacles")
public class BitacorasfacturasController {

	@Autowired
	private IBitacorasFacturasService service;
	
	
	@GetMapping
	public List<Bitacorasfacturas> all() {
		return service.all();
	}

	@GetMapping("{id}")
	public Optional<Bitacorasfacturas> show(@PathVariable Integer id) {
		return service.findById(id);
	}
	
	@PostMapping
	@ResponseStatus(code = HttpStatus.CREATED)
	public Bitacorasfacturas save(@RequestBody BitacorasFacturas bitacorasfacturas) {
		return service.save(bitacorasfacturas);
	}

	@PutMapping("{id}")
	@ResponseStatus(code = HttpStatus.CREATED)
	public BitacorasfacturasController update(@PathVariable Integer id, @RequestBody Bitacorasfacturas bitacorasfacturas) {
		Optional<Bitacorasfacturas> op = service.findById(id);

		if (!op.isEmpty()) {
			Bitacorasfacturas bitacorasfacturasUpdate = op.get();
			bitacorasfacturasUpdate.setCodigo(bitacorasfacturas.getCodigo());
			bitacorasfacturasUpdate.setDescripcion(bitacorasfacturas.getDescripcion());						
			bitacorasfacturasUpdate.setEstado(bitacorasfacturas.getEstado());
			bitacorasfacturasUpdate.setInmueblesId(bitacorasfacturas.getInmueblesId());
			return service.save(bitacorasfacturasUpdate);
		}

		return bitacorasfacturas;
	}
	
	@DeleteMapping("{id}")
	@ResponseStatus(code = HttpStatus.NO_CONTENT)
	public void delete(@PathVariable Integer id) {
		service.delete(id);
	}
}
